---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import PostsByYear from '../../components/PostsByYear.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

export const prerender = false;

if (!Astro.response.headers) {
	Astro.response.headers = new Headers();
}

return new Response(null, {
	status: 301,
	headers: {
		'Location': '/posts/1'
	}
});

type BlogPost = CollectionEntry<'blog'>;
const title = 'Posts';
const description = 'Articles, guides, tutorials about productivity, DevOps, data-driven applications, life and everything in between.';

// Define how many posts per page
export const POSTS_PER_PAGE = 10;

// Get all posts and sort them
const allPosts = (await getCollection('blog')).sort(
	(a: BlogPost, b: BlogPost) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Calculate total pages
const totalPages = Math.ceil(allPosts.length / POSTS_PER_PAGE);

// Get current page from params or default to 1
const currentPage = Number(Astro.params.page) || 1;

// Validate current page
if (currentPage < 1 || currentPage > totalPages) {
	return Astro.redirect('/posts/1');
}

// Calculate start and end indices for current page
const start = (currentPage - 1) * POSTS_PER_PAGE;
const end = start + POSTS_PER_PAGE;
const posts = allPosts.slice(start, end);

export async function getStaticPaths() {
	return Array.from({ length: totalPages }, (_, i) => ({
		params: { page: (i + 1).toString() },
	}));
}
---

<BaseLayout title={title} description={description}>
	<div class='container'>
		<div class='mb-10'>
			<h1 class='text-3xl font-bold mb-2'>{title}</h1>
			<p class='text-zinc-700 dark:text-zinc-300 text-lg'>{description}</p>
		</div>
		<PostsByYear posts={posts} />
		
		<!-- Pagination -->
		{totalPages > 1 && (
			<div class="flex items-center gap-4 mt-8 mb-4">
				{currentPage > 1 && (
					<a 
						href={`/posts/${currentPage - 1}`}
						class="px-4 py-2 bg-zinc-100 dark:bg-zinc-800 rounded-lg hover:bg-zinc-200 dark:hover:bg-zinc-700 transition-colors"
					>
						Previous
					</a>
				)}
				<span class="text-zinc-700 dark:text-zinc-300">
					Page {currentPage} of {totalPages}
				</span>
				{currentPage < totalPages && (
					<a 
						href={`/posts/${currentPage + 1}`}
						class="px-4 py-2 bg-zinc-100 dark:bg-zinc-800 rounded-lg hover:bg-zinc-200 dark:hover:bg-zinc-700 transition-colors"
					>
						Next
					</a>
				)}
			</div>
		)}
	</div>
</BaseLayout>
