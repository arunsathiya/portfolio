---
interface Props {
	imageKey: string;
	alt: string;
}

const { imageKey, alt } = Astro.props;

console.log('R2Image component rendering with props:', { imageKey, alt });
---

<img data-r2-key={imageKey} src='/placeholder.png' alt={alt} />

<script>
	async function refreshSignedUrls() {
		const images = document.querySelectorAll<HTMLImageElement>('img[data-r2-key]');

		if (images.length === 0) {
			console.warn('No images found with data-r2-key attribute. DOM content:', document.body.innerHTML);
		}

		for (const img of images) {
			const imageKey = img.getAttribute('data-r2-key');

			if (imageKey) {
				try {
					const response = await fetch(`/api/signedUrl?key=${encodeURIComponent(imageKey)}`, {
						headers: {
							Accept: 'application/json',
						},
					});

					if (!response.ok) {
						throw new Error(`HTTP error! status: ${response.status}`);
					}

					const data = await response.json();

					if (data.url) {
						img.src = data.url;
					} else {
						console.error('No URL received in the response:', JSON.stringify(data));
					}
				} catch (error) {
					console.error('Failed to refresh signed URL:', error);
				}
			} else {
				console.warn('Image found without data-r2-key attribute');
			}
		}
	}

	// Refresh URLs on page load
	refreshSignedUrls();

	// Optionally, refresh URLs periodically
	setInterval(refreshSignedUrls, 50 * 60 * 1000); // Refresh every 50 minutes
</script>
