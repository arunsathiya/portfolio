---
const { headings, maxLevel = 3 } = Astro.props;
const toc = buildToc(headings);
function buildToc(headings: any) {
	const _toc: any = [];
	const parentHeadings = new Map();
	(headings || []).forEach((h: any) => {
		const heading = { ...h, subheadings: [] };
		parentHeadings.set(heading.depth, heading);
		// Change 2 to 1 if your markdown includes your <h1>
		if (heading.depth === 2) {
			_toc.push(heading);
		} else {
			if (maxLevel > 2) {
				parentHeadings.get(heading.depth - 1)?.subheadings?.push(heading);
			}
		}
	});
	return _toc;
}
---

<nav class='toc sticky top-4 py-2 lg:-ml-3'>
	<h3 class='font-extrabold uppercase mb-1 px-3 text-sm'>On This Page</h3>
	<ul class='toc-list max-h-[calc(100vh-70px)] overflow-auto text-[.825rem] text-[var(--color-content-secondary)]'>
		{
			toc.map((heading: any) => (
				<li>
					<a
						class='block font-bold py-1.5 px-3 border-l border-transparent text-inherit leading-tight text-zinc-700 dark:text-zinc-300'
						href={'#' + heading.slug}
					>
						{heading.text}
					</a>
					{heading.subheadings?.length > 0 && (
						<ul>
							{heading.subheadings.map((subheading: any) => (
								<li>
									<a
										class='block py-1.5 pl-6 pr-3 border-l border-transparent text-inherit leading-tight text-zinc-700 dark:text-zinc-300'
										href={'#' + subheading.slug}
									>
										{subheading.text}
									</a>
								</li>
							))}
						</ul>
					)}
				</li>
			))
		}
	</ul>
</nav>
<style>
	.toc-list::-webkit-scrollbar {
		width: 5px;
	}

	/* Track */
	.toc-list::-webkit-scrollbar-track {
		background: transparent;
	}

	/* Handle */
	.toc-list::-webkit-scrollbar-thumb {
		background: #eeeeee;
		border-radius: 5px;
	}
	:global(.dark) .toc-list::-webkit-scrollbar-thumb {
		background: #2e2e2e;
		border-radius: 5px;
	}
</style>
